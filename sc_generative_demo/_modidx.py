# Autogenerated by nbdev

d = { 'settings': { 'branch': 'main',
                'doc_baseurl': '/sc_generative_demo',
                'doc_host': 'https://main.github.io',
                'git_url': 'https://github.com/main/sc_generative_demo',
                'lib_path': 'sc_generative_demo'},
  'syms': { 'sc_generative_demo.DataManagement': { 'sc_generative_demo.DataManagement.Meta': ( 'data_management.html#meta',
                                                                                               'sc_generative_demo/DataManagement.py'),
                                                   'sc_generative_demo.DataManagement.Meta.sew': ( 'data_management.html#meta.sew',
                                                                                                   'sc_generative_demo/DataManagement.py'),
                                                   'sc_generative_demo.DataManagement.Meta.strip': ( 'data_management.html#meta.strip',
                                                                                                     'sc_generative_demo/DataManagement.py'),
                                                   'sc_generative_demo.DataManagement.SplitData': ( 'data_management.html#splitdata',
                                                                                                    'sc_generative_demo/DataManagement.py'),
                                                   'sc_generative_demo.DataManagement.SplitData.__init__': ( 'data_management.html#splitdata.__init__',
                                                                                                             'sc_generative_demo/DataManagement.py'),
                                                   'sc_generative_demo.DataManagement.SplitData._check_input': ( 'data_management.html#splitdata._check_input',
                                                                                                                 'sc_generative_demo/DataManagement.py'),
                                                   'sc_generative_demo.DataManagement.SplitData._split_data': ( 'data_management.html#splitdata._split_data',
                                                                                                                'sc_generative_demo/DataManagement.py'),
                                                   'sc_generative_demo.DataManagement.SplitData.pct_summary': ( 'data_management.html#splitdata.pct_summary',
                                                                                                                'sc_generative_demo/DataManagement.py'),
                                                   'sc_generative_demo.DataManagement.SplitData.split_data': ( 'data_management.html#splitdata.split_data',
                                                                                                               'sc_generative_demo/DataManagement.py'),
                                                   'sc_generative_demo.DataManagement.SplitData.split_data_stratified': ( 'data_management.html#splitdata.split_data_stratified',
                                                                                                                          'sc_generative_demo/DataManagement.py')},
            'sc_generative_demo.DataSets': { 'sc_generative_demo.DataSets.Gex_DTS_Data_Label': ( 'datasets.html#gex_dts_data_label',
                                                                                                 'sc_generative_demo/DataSets.py'),
                                             'sc_generative_demo.DataSets.Gex_DTS_Data_Label.__getitem__': ( 'datasets.html#gex_dts_data_label.__getitem__',
                                                                                                             'sc_generative_demo/DataSets.py'),
                                             'sc_generative_demo.DataSets.Gex_DTS_Data_Label.__init__': ( 'datasets.html#gex_dts_data_label.__init__',
                                                                                                          'sc_generative_demo/DataSets.py'),
                                             'sc_generative_demo.DataSets.Gex_DTS_Data_Label.__len__': ( 'datasets.html#gex_dts_data_label.__len__',
                                                                                                         'sc_generative_demo/DataSets.py')},
            'sc_generative_demo.DeviceManagement': { 'sc_generative_demo.DeviceManagement.DeviceInfo': ( 'device_management.html#deviceinfo',
                                                                                                         'sc_generative_demo/DeviceManagement.py'),
                                                     'sc_generative_demo.DeviceManagement.DeviceInfo.__init__': ( 'device_management.html#deviceinfo.__init__',
                                                                                                                  'sc_generative_demo/DeviceManagement.py'),
                                                     'sc_generative_demo.DeviceManagement.DeviceInfo.get_device': ( 'device_management.html#deviceinfo.get_device',
                                                                                                                    'sc_generative_demo/DeviceManagement.py'),
                                                     'sc_generative_demo.DeviceManagement.DeviceInfo.get_os': ( 'device_management.html#deviceinfo.get_os',
                                                                                                                'sc_generative_demo/DeviceManagement.py'),
                                                     'sc_generative_demo.DeviceManagement.DeviceInfo.get_renderer': ( 'device_management.html#deviceinfo.get_renderer',
                                                                                                                      'sc_generative_demo/DeviceManagement.py')},
            'sc_generative_demo.Evaluation': { 'sc_generative_demo.Evaluation.Inferance': ( 'evaluation.html#inferance',
                                                                                            'sc_generative_demo/Evaluation.py'),
                                               'sc_generative_demo.Evaluation.Inferance.decode_embeddings_VAEGAN': ( 'evaluation.html#inferance.decode_embeddings_vaegan',
                                                                                                                     'sc_generative_demo/Evaluation.py'),
                                               'sc_generative_demo.Evaluation.Inferance.get_embeddings_VAEGAN': ( 'evaluation.html#inferance.get_embeddings_vaegan',
                                                                                                                  'sc_generative_demo/Evaluation.py'),
                                               'sc_generative_demo.Evaluation.Inferance.get_embeddings_VAEGAN_NEG_BI': ( 'evaluation.html#inferance.get_embeddings_vaegan_neg_bi',
                                                                                                                         'sc_generative_demo/Evaluation.py'),
                                               'sc_generative_demo.Evaluation.Visualize': ( 'evaluation.html#visualize',
                                                                                            'sc_generative_demo/Evaluation.py'),
                                               'sc_generative_demo.Evaluation.Visualize.plot_embeddings': ( 'evaluation.html#visualize.plot_embeddings',
                                                                                                            'sc_generative_demo/Evaluation.py'),
                                               'sc_generative_demo.Evaluation.Visualize.plot_umaps': ( 'evaluation.html#visualize.plot_umaps',
                                                                                                       'sc_generative_demo/Evaluation.py')},
            'sc_generative_demo.Models.Classifier': { 'sc_generative_demo.Models.Classifier.Classifier': ( 'model_classifier.html#classifier',
                                                                                                           'sc_generative_demo/Models/Classifier.py'),
                                                      'sc_generative_demo.Models.Classifier.Classifier.__init__': ( 'model_classifier.html#classifier.__init__',
                                                                                                                    'sc_generative_demo/Models/Classifier.py'),
                                                      'sc_generative_demo.Models.Classifier.Classifier.forward': ( 'model_classifier.html#classifier.forward',
                                                                                                                   'sc_generative_demo/Models/Classifier.py')},
            'sc_generative_demo.Models.Evaluation': { 'sc_generative_demo.Models.Evaluation.Inferance': ( 'evaluation.html#inferance',
                                                                                                          'sc_generative_demo/Models/Evaluation.py'),
                                                      'sc_generative_demo.Models.Evaluation.Visualize': ( 'evaluation.html#visualize',
                                                                                                          'sc_generative_demo/Models/Evaluation.py')},
            'sc_generative_demo.Models.VAE': { 'sc_generative_demo.Models.VAE.VAE': ( 'model_vae.html#vae',
                                                                                      'sc_generative_demo/Models/VAE.py'),
                                               'sc_generative_demo.Models.VAE.VAE.__init__': ( 'model_vae.html#vae.__init__',
                                                                                               'sc_generative_demo/Models/VAE.py'),
                                               'sc_generative_demo.Models.VAE.VAE.forward': ( 'model_vae.html#vae.forward',
                                                                                              'sc_generative_demo/Models/VAE.py'),
                                               'sc_generative_demo.Models.VAE.VAE.reparameterize': ( 'model_vae.html#vae.reparameterize',
                                                                                                     'sc_generative_demo/Models/VAE.py')},
            'sc_generative_demo.Models.VAEGAN': { 'sc_generative_demo.Models.VAEGAN.VAEGAN': ( 'model_vaegan.html#vaegan',
                                                                                               'sc_generative_demo/Models/VAEGAN.py'),
                                                  'sc_generative_demo.Models.VAEGAN.VAEGAN.__init__': ( 'model_vaegan.html#vaegan.__init__',
                                                                                                        'sc_generative_demo/Models/VAEGAN.py'),
                                                  'sc_generative_demo.Models.VAEGAN.VAEGAN.forward': ( 'model_vaegan.html#vaegan.forward',
                                                                                                       'sc_generative_demo/Models/VAEGAN.py'),
                                                  'sc_generative_demo.Models.VAEGAN.VAEGAN.reparameterize': ( 'model_vaegan.html#vaegan.reparameterize',
                                                                                                              'sc_generative_demo/Models/VAEGAN.py')},
            'sc_generative_demo.Models.VAEGAN_NEG_BI': { 'sc_generative_demo.Models.VAEGAN_NEG_BI.VAEGAN_NEG_BI': ( 'model_vaegan_neg_bi.html#vaegan_neg_bi',
                                                                                                                    'sc_generative_demo/Models/VAEGAN_NEG_BI.py'),
                                                         'sc_generative_demo.Models.VAEGAN_NEG_BI.VAEGAN_NEG_BI.__init__': ( 'model_vaegan_neg_bi.html#vaegan_neg_bi.__init__',
                                                                                                                             'sc_generative_demo/Models/VAEGAN_NEG_BI.py'),
                                                         'sc_generative_demo.Models.VAEGAN_NEG_BI.VAEGAN_NEG_BI.decode': ( 'model_vaegan_neg_bi.html#vaegan_neg_bi.decode',
                                                                                                                           'sc_generative_demo/Models/VAEGAN_NEG_BI.py'),
                                                         'sc_generative_demo.Models.VAEGAN_NEG_BI.VAEGAN_NEG_BI.forward': ( 'model_vaegan_neg_bi.html#vaegan_neg_bi.forward',
                                                                                                                            'sc_generative_demo/Models/VAEGAN_NEG_BI.py'),
                                                         'sc_generative_demo.Models.VAEGAN_NEG_BI.VAEGAN_NEG_BI.reparameterize': ( 'model_vaegan_neg_bi.html#vaegan_neg_bi.reparameterize',
                                                                                                                                   'sc_generative_demo/Models/VAEGAN_NEG_BI.py')},
            'sc_generative_demo.Models.VariationalDecoder': { 'sc_generative_demo.Models.VariationalDecoder.VariationalDecoder': ( 'losses.html#variationaldecoder',
                                                                                                                                   'sc_generative_demo/Models/VariationalDecoder.py'),
                                                              'sc_generative_demo.Models.VariationalDecoder.VariationalDecoder.__init__': ( 'losses.html#variationaldecoder.__init__',
                                                                                                                                            'sc_generative_demo/Models/VariationalDecoder.py'),
                                                              'sc_generative_demo.Models.VariationalDecoder.VariationalDecoder.forward': ( 'losses.html#variationaldecoder.forward',
                                                                                                                                           'sc_generative_demo/Models/VariationalDecoder.py')},
            'sc_generative_demo.Models.VariationalDecoderNEG': { 'sc_generative_demo.Models.VariationalDecoderNEG.VariationalDecoderBI': ( 'model_variational_decoder_neg.html#variationaldecoderbi',
                                                                                                                                           'sc_generative_demo/Models/VariationalDecoderNEG.py'),
                                                                 'sc_generative_demo.Models.VariationalDecoderNEG.VariationalDecoderBI.__init__': ( 'model_variational_decoder_neg.html#variationaldecoderbi.__init__',
                                                                                                                                                    'sc_generative_demo/Models/VariationalDecoderNEG.py'),
                                                                 'sc_generative_demo.Models.VariationalDecoderNEG.VariationalDecoderBI.forward': ( 'model_variational_decoder_neg.html#variationaldecoderbi.forward',
                                                                                                                                                   'sc_generative_demo/Models/VariationalDecoderNEG.py')},
            'sc_generative_demo.Models.VariationalEncoder': { 'sc_generative_demo.Models.VariationalEncoder.VariationalEncoder': ( 'model_variational_encoder.html#variationalencoder',
                                                                                                                                   'sc_generative_demo/Models/VariationalEncoder.py'),
                                                              'sc_generative_demo.Models.VariationalEncoder.VariationalEncoder.__init__': ( 'model_variational_encoder.html#variationalencoder.__init__',
                                                                                                                                            'sc_generative_demo/Models/VariationalEncoder.py'),
                                                              'sc_generative_demo.Models.VariationalEncoder.VariationalEncoder.forward': ( 'model_variational_encoder.html#variationalencoder.forward',
                                                                                                                                           'sc_generative_demo/Models/VariationalEncoder.py')},
            'sc_generative_demo.core': {'sc_generative_demo.core.foo': ('core.html#foo', 'sc_generative_demo/core.py')}}}
