# AUTOGENERATED! DO NOT EDIT! File to edit: ../nbs/01_device_management.ipynb.

# %% auto 0
__all__ = ['DeviceInfo']

# %% ../nbs/01_device_management.ipynb 3
import torch
import platform

class DeviceInfo:
    def __init__(self):
        # Get the operating system and version
        self.os = platform.system()
        self.version = platform.release()

        # Get the machine's architecture
        self.arch = platform.machine()
        self.gmount = False

    def get_device(self):
        # Set the device based on the machine's architecture
        if self.arch == 'x86_64':
            device = torch.device('mps') if self.os == 'Darwin' else torch.device('cuda')
            self.gmount = True if self.os == 'Linux' else False
        else:
            device = torch.device('cpu')
            self.gmount = False

        return device
    
    def get_renderer(self):
        # Set the default renderer based on the operating system
        if self.os == 'Darwin':
            return 'notebook'
        elif self.os == 'Linux':
            return 'colab'
        else:
            return None
    
    def get_os(self):
        return self.os

